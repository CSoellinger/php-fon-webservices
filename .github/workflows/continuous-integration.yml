# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "CI"

on:
  pull_request:
  push:
    branches:
      - "main"

env:
  COMPOSER_ROOT_VERSION: "2.0.9"

jobs:

  coding-standards:
    name: "Coding Standards"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "none"
          ini-values: "memory_limit=-1"
      - uses: "ramsey/composer-install@v1"
      - name: "Check coding standards"
        run: "composer dev:lint"

  static-analysis:
    name: "Static Analysis"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "none"
          ini-values: "memory_limit=-1"
      - uses: "ramsey/composer-install@v1"
      - name: "Run PHPStan"
        run: "composer dev:analyze:phpstan"
      - name: "Run Psalm"
        run: "composer dev:analyze:psalm -- --shepherd"

  unit-tests:
    name: "Unit Tests"
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
        dependencies:
          - "lowest"
          - "highest"
    steps:
      - name: "Configure Git"
        if: ${{ matrix.operating-system == 'windows-latest' }}
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf
      - uses: "actions/checkout@v2"
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: soap
          coverage: "pcov"
          ini-values: "memory_limit=-1"
      - uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
      - name: "Create .env file"
        uses: 1arp/create-a-file-action@0.2
        with:
          path: '.'
          file: '.env'
          content: ${{ secrets.TESTING_ENV_FILE }}
      - name: "Run unit tests"
        run: "composer dev:test:coverage:ci -- --coverage-text"
      - name: "Publish coverage report to Codecov"
        uses: "codecov/codecov-action@v1"
